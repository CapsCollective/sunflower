name: 'Submit Release'

on:
  push:
    branches: [ 'release' ]

env:
  VERSION_FILE: project.godot
  VERSION_REGEX: config\/version=\"\K[0-9.\-A-z]*

jobs:
  deploy-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Extract version
        uses: CapsCollective/version-actions/extract-version@v1.0
        with:
          version-file: ${{ env.VERSION_FILE }}
          version-regex: ${{ env.VERSION_REGEX }}
        id: extract-version
      
      - name: Fetch macOS build
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          version: tags/${{ steps.extract-version.outputs.version-string }}
          file: macos.tar
          target: artifacts/macos.tar

      - name: Decompress macOS build
        run: |
          mkdir -p build/macos
          tar -xvf artifacts/macos.tar -C ./build/macos

      - name: Fetch Windows build
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          version: tags/${{ steps.extract-version.outputs.version-string }}
          file: windows.zip
          target: artifacts/windows.zip

      - name: Decompress Windows build
        run: |
          mkdir -p build/windows
          unzip artifacts/windows.zip -d ./build/windows

      - name: Fetch Linux build
        uses: dsaltares/fetch-gh-release-asset@1.1.1
        with:
          version: tags/${{ steps.extract-version.outputs.version-string }}
          file: linux.tar
          target: artifacts/linux.tar

      - name: Decompress Linux build
        run: |
          mkdir -p build/linux
          tar -xvf artifacts/linux.tar -C ./build/linux

      - name: Deploy macOS build to itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.BUTLER_API_KEY }}
          itchUsername: ${{ vars.ITCH_USERNAME }}
          itchGameId: ${{ vars.ITCH_GAME_ID }}
          gameData: ./build/macos
          buildChannel: macos-release
          buildNumber: ${{ steps.extract-version.outputs.version-number }}

      - name: Deploy Windows build to itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.BUTLER_API_KEY }}
          itchUsername: ${{ vars.ITCH_USERNAME }}
          itchGameId: ${{ vars.ITCH_GAME_ID }}
          gameData: ./build/windows
          buildChannel: windows-release
          buildNumber: ${{ steps.extract-version.outputs.version-number }}

      - name: Deploy Linux build to itch.io
        uses: KikimoraGames/itch-publish@v0.0.3
        with:
          butlerApiKey: ${{ secrets.BUTLER_API_KEY }}
          itchUsername: ${{ vars.ITCH_USERNAME }}
          itchGameId: ${{ vars.ITCH_GAME_ID }}
          gameData: ./build/linux
          buildChannel: linux-release
          buildNumber: ${{ steps.extract-version.outputs.version-number }}

      - name: Update release status
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.extract-version.outputs.version-string }}
          commit: ${{ github.sha }}
          allowUpdates: true
          updateOnlyUnreleased: true
          prerelease: false
